{"version":3,"sources":["./src/app/binary-tree/binary-tree.component.ts","./src/app/binary-tree/binary-tree.component.html","./src/app/shared/algorithm.enum.ts","./src/app/binary-tree/algorithms/postorder.ts","./src/app/searching-algorithms/algorithms/binary-search.ts","./src/app/algorithm-visualizer/algorithms/bubble-sort.ts","./src/environments/environment.ts","./src/app/shared/tree.enum.ts","./src/app/algorithm-visualizer/algorithms/quick-sort.ts","./src/app/algorithm-visualizer/algorithms/insertion-sort.ts","./src/app/searching-algorithms/searching-algorithms.component.ts","./src/app/searching-algorithms/searching-algorithms.component.html","./src/app/shared/binary-tree.service.ts","./src/app/shared/models/TreeNode.ts","./src/app/shared/arrays.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/binary-tree/algorithms/preorder.ts","./src/app/binary-tree/algorithms/inorder.ts","./src/app/algorithm-visualizer/algorithm-visualizer.component.ts","./src/app/algorithm-visualizer/algorithm-visualizer.component.html","./src/app/app.module.ts","./src/app/shared/colours.enum.ts","./src/app/algorithm-visualizer/algorithms/merge-sort.ts","./src/app/searching-algorithms/algorithms/linear-search.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { PostOrder } from './algorithms/postorder';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { TreeNode } from '../shared/models/TreeNode';\nimport { PreOrder } from './algorithms/preorder';\nimport { InOrder } from './algorithms/inorder';\nimport { BinaryTreeService } from '../shared/binary-tree.service';\nimport { TreeEnum } from '../shared/tree.enum';\n\n\n@Component({\n  selector: 'app-binary-tree',\n  templateUrl: './binary-tree.component.html',\n  styleUrls: ['./binary-tree.component.scss']\n})\nexport class BinaryTreeComponent implements OnInit {\n\n  @ViewChild('canvas', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;\n  private ctx: CanvasRenderingContext2D;\n\n  treeEnum = TreeEnum;\n  selectedAlgorithm: TreeEnum = TreeEnum.PRE_ORDER;\n  nodes: TreeNode[] = [];\n  visitedNodes: TreeNode[] = [];\n  root = null;\n\n  constructor(public binTreeService:  BinaryTreeService) { }\n\n  ngOnInit(): void {\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.initBinaryTree();\n  }\n\n  initBinaryTree() {\n    this.clearCanvas();\n    this.root = this.binTreeService.initTree();\n    this.createNodes(this.root);\n    this.displayNodes();\n  }\n\n  resetNodes() {\n    this.visitedNodes = [];\n    this.binTreeService.generateNewNodes();\n    this.initBinaryTree();\n  }\n\n  displayInfo(selectedTraversal: TreeEnum): void {\n    this.selectedAlgorithm = selectedTraversal;\n\n  }\n\n  pitchSize(event: any): void {\n    this.binTreeService.nodeAmount = event.value;\n    this.resetNodes();\n  }\n\n  pitchSpeed = (event: any) => this.binTreeService.animationSpeed = event.value;\n\n  startSorting() {\n    if (this.selectedAlgorithm == TreeEnum.PRE_ORDER) this.preOrder();\n    if (this.selectedAlgorithm == TreeEnum.IN_ORDER) this.inOrder();\n    if (this.selectedAlgorithm == TreeEnum.POST_ORDER) this.postOrder();\n  }\n\n  preOrder() {\n    const obj = new PreOrder(this.binTreeService, this.ctx, this.canvas, this.visitedNodes);\n    obj.preOrderTraversal(this.root);\n  }\n\n  inOrder() {\n    const obj = new InOrder(this.binTreeService, this.ctx, this.canvas, this.visitedNodes);\n    obj.inOrderTraversal(this.root);\n  }\n  \n  postOrder() {\n    const obj = new PostOrder(this.binTreeService, this.ctx, this.canvas, this.visitedNodes);\n    obj.postOrderTraversal(this.root);\n  }\n\n  \n  displayNodes() {\n    this.binTreeService.nodes.forEach((node) => {\n      this.highlightNode(node);\n      });\n    }\n\n    highlightNode(node: TreeNode) {\n      // create nodes \n      this.ctx.beginPath();\n      this.ctx.lineWidth = 3;\n      this.ctx.fillStyle = node.colour;\n      // this.ctx.strokeStyle = 'blue';\n      this.ctx.arc(node.xAxis, node.yAxis, 30, 0, 90); \n      this.ctx.stroke();\n      this.ctx.fill();\n  \n      // fill node data/style\n      this.ctx.font = \"30px Arial\";\n      this.ctx.fillStyle = 'black';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(node.data.toString(),node.xAxis, node.yAxis + 10);\n    }\n\nclearCanvas = () => this.ctx.clearRect(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n\n\n  createNodes(root: TreeNode) {\n\n    let stack = [] // dfs\n    root.xAxis = 400;\n    root.yAxis = 50;\n    stack.push(root);\n\n    while (stack.length > 0) {\n      let pop = stack.pop();\n\n      if (pop != null) {\n        let xAxis = pop.level === 0 ? 150 : 75;\n\n        if (pop.right) {\n          pop.right.xAxis = pop.xAxis + xAxis;\n          pop.right.yAxis = pop.yAxis + 75;\n          this.setLines(pop, pop.right);\n        }\n\n        if (pop.left) {\n          pop.left.xAxis = pop.xAxis - xAxis;\n          pop.left.yAxis = pop.yAxis + 75;\n          this.setLines(pop, pop.left);\n        }\n        stack.push(pop.right);\n        stack.push(pop.left);\n\n      }\n    }\n  }\n\n  setLines(parentNode: TreeNode, childNode: TreeNode) {\n        // set lines\n        this.ctx.beginPath(); // Reset the current path\n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(childNode.xAxis, childNode.yAxis); // Staring point\n        this.ctx.lineTo(parentNode.xAxis, parentNode.yAxis); // End point\n        this.ctx.stroke(); // Make the line visible\n  }\n}\n","<mat-toolbar class=\"array-container\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"resetNodes()\">\n    Generate New Array\n  </button>\n\n    <div class=\"btn-group\" dropdown [insideClick]=\"true\">\n        <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\" aria-controls=\"dropdown-animated\">\n      {{ selectedAlgorithm }} <span class=\"caret\"></span>\n    </button>\n        <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\">\n            <li role=\"menuitem\">\n                <a class=\"dropdown-item\" (click)=\"displayInfo(treeEnum.PRE_ORDER)\">{{treeEnum.PRE_ORDER}}</a>\n            </li>\n\n            <li role=\"menuitem\">\n                <a class=\"dropdown-item\" (click)=\"displayInfo(treeEnum.IN_ORDER)\">{{treeEnum.IN_ORDER}}</a>\n            </li>\n\n            <li role=\"menuitem\">\n                <a class=\"dropdown-item\" (click)=\"displayInfo(treeEnum.POST_ORDER)\">{{treeEnum.POST_ORDER}}</a>\n            </li>\n\n            <li role=\"menuitem\">\n                <a class=\"dropdown-item\" (click)=\"displayInfo(treeEnum.BFS)\">{{treeEnum.BFS}}</a>\n            </li>\n\n        </ul>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"startSorting()\"> Traverse\n  </button>\n\n    <small>Array Size</small>\n    <mat-slider thumbLabel tickInterval=\"auto\" min=\"4\" max=\"30\" (input)=\"pitchSize($event)\" value=\"{{ binTreeService.nodeAmount }}\"></mat-slider>\n\n    <small>Iteration Speed </small>\n    <mat-slider id=\"speedSlider\" thumbLabel tickInterval=\"auto\" min=\"0\" max=\"1000\" (input)=\"pitchSpeed($event)\" value=\"{{ binTreeService.animationSpeed }}\">\n    </mat-slider>\n</mat-toolbar>\n\n\n<h5> Github CodeSpace</h5>\n\n\n<div>\n    <span *ngFor=\"let node of visitedNodes\">[{{node.data}}]  </span>\n</div>\n\n<canvas #canvas width=\"1000\" height=\"1000\"></canvas>","export enum AlgorithmEnum {\n  SELECTED_ALGORITHM = 'Algorithms',\n  BUBBLE = 'Bubble Sort',\n  INSERTION = 'Insertion Sort',\n  MERGE = 'Merge Sort',\n  QUICK = 'Quick Sort',\n  LINEAR = 'Linear Search',\n  BINARY = 'Binary Search',\n  RED_BAR = 'Selected Index',\n  ORANGE_BAR = 'Pivot Index',\n  GREEN_BAR = 'Swapped Values'\n}\n","import { TreeNode } from '../../shared/models/TreeNode';\nimport { BinaryTreeComponent } from '../binary-tree.component';\nimport { BinaryTreeService } from '../../shared/binary-tree.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Colours } from '../../shared/colours.enum';\n\nexport class PostOrder {\n\n    animationNodes = [];\n    visitedNodes: TreeNode[] = [];\n    coloursEnum = Colours;\n    ctx: CanvasRenderingContext2D;\n    canvas: ElementRef<HTMLCanvasElement>;\n\n    constructor(public treeService:  BinaryTreeService,\n      ctx: CanvasRenderingContext2D,\n      canvas:  ElementRef<HTMLCanvasElement>, \n      visitedNodes: TreeNode[]) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.visitedNodes = visitedNodes;\n    }\n\n  postOrderTraversal(root: TreeNode) {\n    let stack = [];\n    stack.push(root);\n    while (stack.length > 0) {\n        let pop = stack.pop();\n        if (pop) {\n            stack.push(pop.left);\n            stack.push(pop.right);\n            this.animationNodes.unshift(pop);\n        }\n    }\n    this.postOrderAnimation();\n  }\n\n  postOrderAnimation() {\n    let timer = setInterval(() => {     \n      let action = this.animationNodes.shift();\n      if (action) {\n          this.treeService.nodes.forEach((node) => {\n            if (this.animationNodes.length <= 0) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else if (node.data === action.data) {\n              node.colour = this.coloursEnum.SELECTED;\n              this.highlightNode(node);\n              this.visitedNodes.push(node);\n            }\n            else if (this.visitedNodes.includes(node)) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else {\n              node.colour = 'white';\n              this.highlightNode(node);\n            }\n          });\n      }\n      else {\n        clearInterval(timer);\n      }\n    }, this.treeService.animationSpeed)\n  }\n\n  highlightNode(node: TreeNode) {\n    // create nodes \n    this.ctx.beginPath();\n    this.ctx.lineWidth = 3;\n    this.ctx.fillStyle = node.colour;\n    // this.ctx.strokeStyle = 'blue';\n    this.ctx.arc(node.xAxis, node.yAxis, 30, 0, 90); \n    this.ctx.stroke();\n    this.ctx.fill();\n\n    // fill node data/style\n    this.ctx.font = \"30px Arial\";\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(node.data.toString(), node.xAxis, node.yAxis + 10);\n  }\n}","import { ArrayBars } from '../../shared/models/ArrayBars';\nimport { ArraysService } from '../../shared/arrays.service';\n\nexport class BinarySearch {\n\n    animations: AnimationValues[] = [];\n\n    constructor(private readonly arrService: ArraysService) { }\n\n    // param = [arr];\n    binarySearch(arr: ArrayBars[], target: number): number {\n\n        let left = 0;\n        let right = arr.length - 1;\n\n        while (left <= right) {\n\n            const mid = Math.floor((left + (right - left) / 2));\n\n            this.animations.push({ selectedIndex: mid, disabledIndexs: null });\n\n            if (arr[mid].value === target) {\n                this.animations.push({ selectedIndex: mid, disabledIndexs: null });\n                return mid;\n            }\n            if (arr[mid].value < target) { // Values is on the right side, ignore the left side\n                this.animations.push({ selectedIndex: null, disabledIndexs: this.getIndexRange(left, mid) });\n                left = mid + 1;\n            }\n            else {\n                this.animations.push({ selectedIndex: null, disabledIndexs: this.getIndexRange(mid, right) });\n                right = mid - 1;\n            }\n        }\n        console.log('cannot find target');\n        return -1; // Cannot find target\n    }\n\n    getIndexRange(left: number, right: number): number[] {\n        const indexes: number[] = [];\n        for (let i = left; i <= right; i++)\n            indexes.push(i);\n        return indexes;\n    }\n\n    binarySearchAnimation(): void {\n        this.arrService.sortingAnimationsMax = this.animations.length;\n        const timer = setInterval(() => {\n            const action = this.animations.shift();\n            this.arrService.sortingAnimationsLeft = this.animations.length;\n            if (action) {\n                if (action.selectedIndex && this.animations.length === 0) // Last index, animation is finished\n                    this.arrService.numbers[action.selectedIndex].colour = this.arrService.$finishedBars;\n                else if (action.selectedIndex)\n                    this.arrService.numbers[action.selectedIndex].colour = this.arrService.$selectedIndex;\n                else\n                    action.disabledIndexs.map((num) => this.arrService.numbers[num].colour = '#DCDCDC');\n            }\n            else {\n                clearInterval(timer);\n                if (this.arrService.isArraySorted(this.arrService.numbers))\n                    this.arrService.sorting = false;\n\n            }\n        }, this.arrService.animationSpeed);\n    }\n\n\n}\n\nexport class AnimationValues {\n    selectedIndex: number;\n    disabledIndexs: number[];\n}","import { ArraysService } from 'src/app/shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\n\nexport class BubbleSort {\n\n  animations: AnimationValues[] = [];\n\n  constructor(private readonly arrService: ArraysService) { }\n\n  bubbleSort(array: ArrayBars[]): void {\n    for (let i = 0; i < array.length - 1; i++) {\n      for (let j = 0; j < array.length - i - 1; j++) {\n        this.animations.push({ leftIndex: null, rightIndex: null, index: j });\n        if (array[j].value > array[j + 1].value) {\n          this.animations.push({ leftIndex: j, rightIndex: j + 1, index: null });\n          this.arrService.swap(array, j, j + 1);\n        }\n      }\n    }\n  }\n\n  bubbleSortAnimation(): void {\n    this.arrService.sortingAnimationsMax = this.animations.length;\n    const timer = setInterval(() => {\n      const action: AnimationValues = this.animations.shift();\n      this.arrService.sortingAnimationsLeft = this.animations.length;\n      if (action) {\n        this.arrService.numbers.map((num) => (num.colour = this.arrService.$primaryBars));\n        if (action.index != null) {\n          this.arrService.numbers[action.index].colour = this.arrService.$selectedIndex;\n        }\n        else {\n          this.arrService.numbers[action.leftIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.rightIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.swap(this.arrService.numbers, action.leftIndex, action.rightIndex);\n        }\n      }\n      else {\n        clearInterval(timer);\n        if (this.arrService.isArraySorted(this.arrService.numbers)) {\n          this.arrService.animateSortedArray();\n          this.arrService.sorting = false;\n        }\n      }\n    }, this.arrService.animationSpeed);\n  }\n}\n\ninterface AnimationValues {\n  leftIndex: number;\n  rightIndex: number;\n  index: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum TreeEnum {\n  SELECTED_ALGORITHM = 'Algorithms',\n  PRE_ORDER = 'Preorder',\n  IN_ORDER = 'Inorder',\n  POST_ORDER = 'Postorder',\n  BFS = 'Breadth First Search',\n}","import { ArraysService } from '../../shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\n\nexport class QuickSort {\n\n  animations: animationValues[] = [];\n\n  constructor(private readonly arrService: ArraysService) { }\n\n  quickSort(arr: ArrayBars[]): void {\n    // Edge case:\n    /* \n    If the array is already sorted, then we do not need to perform quicksort.\n    The reason this check is needed, is because quicksort will still be performed\n    on the sorted array, thus making the time complexity o(N^2), but by performing \n    a simple o(N) check condition, we can then get the average case: o(n log(n))\n    */\n    if (this.arrService.isArraySorted(arr))\n      return;\n    else\n      this.sort(arr, 0, arr.length - 1);\n\n  }\n\n  sort(arr: ArrayBars[], left: number, right: number): void {\n    if (left < right) {\n      // partitioning index, arr[pi] correct place?\n      let pi = this.partition(arr, left, right);\n\n      // Recursively sort elements before/after partition\n      this.sort(arr, left, pi - 1);\n      this.sort(arr, pi + 1, right);\n    }\n  }\n\n  partition(arr: ArrayBars[], left: number, right: number): number {\n\n    const pivotValue = arr[right].value; // pivot set to last element\n    let low = left - 1; // left/low index\n\n    for (let i = left; i < right; i++) {\n      this.animations.push({ leftIndex: i, rightIndex: i, pivot: right, isSwapping: false });\n\n      if (arr[i].value < pivotValue) {\n        low++;\n        this.animations.push({ leftIndex: low, rightIndex: i, pivot: right, isSwapping: true });\n        this.arrService.swap(arr, low, i);\n      }\n    }\n    this.animations.push({ leftIndex: low + 1, rightIndex: right, pivot: right, isSwapping: true });\n    this.arrService.swap(arr, low + 1, right);\n\n    return low + 1;\n  }\n\n  quickSortAnimation(): void {\n    this.arrService.sortingAnimationsMax = this.animations.length;\n    const timer = setInterval(() => {\n      const action: animationValues = this.animations.shift();\n      this.arrService.sortingAnimationsLeft = this.animations.length;\n\n\n      if (action) {\n        // Pivot\n        this.arrService.numbers.map((num) => (num.colour = this.arrService.$primaryBars));\n        this.arrService.numbers[action.pivot].colour = 'orange';\n\n        if (action.isSwapping == false) {\n          this.arrService.numbers[action.leftIndex].colour = this.arrService.$selectedIndex;\n          this.arrService.numbers[action.rightIndex].colour = this.arrService.$selectedIndex;\n        }\n        else {\n          this.arrService.numbers[action.leftIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.rightIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.swap(this.arrService.numbers, action.leftIndex, action.rightIndex);\n        }\n      } else {\n        clearInterval(timer);\n        if (this.arrService.isArraySorted(this.arrService.numbers)) {\n          this.arrService.animateSortedArray();\n          this.arrService.sorting = false;\n        }\n      }\n    }, this.arrService.animationSpeed);\n  }\n}\n\ninterface animationValues {\n  leftIndex: number;\n  rightIndex: number;\n  pivot: number;\n  isSwapping: boolean;\n}\n","import { ArraysService } from 'src/app/shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\n\nexport class InsertionSort {\n  animations: animationValues[] = [];\n\n  constructor(private readonly arrService: ArraysService) { }\n\n  insertionSort(arr: ArrayBars[]): void {\n    for (let outer = 1; outer < arr.length; outer++) {\n      let inner = outer;\n      this.animations.push({ rightIndex: null, leftIndex: null, index: inner });\n\n      while (inner > 0 && arr[inner - 1].value > arr[inner].value) { // If previous value is greater, cascasde the value back to its correct index.\n        this.animations.push({ rightIndex: inner, leftIndex: inner - 1, index: null });\n        this.arrService.swap(arr, inner, inner - 1);\n        inner--;\n      }\n    }\n  }\n\n\n  insertionSortAnimation() {\n    this.arrService.sortingAnimationsMax = this.animations.length;\n    const timer = setInterval(() => {\n      const action: animationValues = this.animations.shift();\n      this.arrService.sortingAnimationsLeft = this.animations.length;\n      if (action) {\n        this.arrService.numbers.map((num) => (num.colour = this.arrService.$primaryBars));\n\n        if (action.index != null)\n          this.arrService.numbers[action.index].colour = this.arrService.$selectedIndex;\n        else {\n          this.arrService.numbers[action.leftIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.rightIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.swap(this.arrService.numbers, action.leftIndex, action.rightIndex);\n        }\n      }\n      else {\n        clearInterval(timer);\n        if (this.arrService.isArraySorted(this.arrService.numbers)) {\n          this.arrService.animateSortedArray();\n          this.arrService.sorting = false;\n        }\n      }\n    }, this.arrService.animationSpeed)\n\n\n  }\n}\n\ninterface animationValues {\n  leftIndex: number;\n  rightIndex: number;\n  index: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ArraysService } from '../shared/arrays.service';\nimport { AlgorithmEnum } from '../shared/algorithm.enum';\nimport { BinarySearch } from './algorithms/binary-search';\nimport { LinearSearch } from './algorithms/linear-search';\n\n@Component({\n  selector: 'app-searching-algorithms',\n  templateUrl: './searching-algorithms.component.html',\n  styleUrls: ['./searching-algorithms.component.scss']\n})\nexport class SearchingAlgorithmsComponent implements OnInit {\n\n  algoEnum = AlgorithmEnum;\n  selectedAlgorithm: AlgorithmEnum = AlgorithmEnum.BINARY;\n  targetIndex = 0;\n\n  constructor(public arrService: ArraysService) { }\n\n  ngOnInit(): void {\n    this.arrService.resetArrayNoDups();\n    this.arrService.sortArray();\n    this.targetIndex = this.getRandomElement();\n    this.arrService.numbers[this.targetIndex].colour = this.arrService.$targetIndex;\n  }\n\n  resetArray(): void {\n    this.arrService.resetArrayNoDups();\n    this.arrService.sortArray();\n    this.targetIndex = this.getRandomElement();\n    this.arrService.numbers[this.targetIndex].colour = this.arrService.$targetIndex;\n  }\n\n  pitchSize(event: any): void {\n    this.arrService.arrayLength = event.value;\n    this.arrService.setBarWidth();\n    this.resetArray();\n  }\n\n\n  pitchSpeed(event: any): void {\n    this.arrService.animationSpeed = event.value;\n  }\n\n  displayInfo(pickedAlgo: AlgorithmEnum): void {\n    this.selectedAlgorithm = pickedAlgo;\n  }\n\n  startSorting(): void {\n    this.arrService.sorting = true;\n    if (this.selectedAlgorithm === AlgorithmEnum.LINEAR) { this.linearSearch(); }\n    if (this.selectedAlgorithm === AlgorithmEnum.BINARY) { this.binarySearch(); }\n  }\n\n  getRandomElement(): number {\n    const min = 20;\n    const max = 200;\n    return Math.floor((Math.random() * (max - min + 1)) + min) % this.arrService.numbers.length;\n  }\n\n  linearSearch(): void {\n    const ls = new LinearSearch(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    ls.linearSearch(numbersCopy, numbersCopy[this.targetIndex].value);\n    ls.linearSearchAnimation();\n  }\n\n  binarySearch(): void {\n    const bs = new BinarySearch(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    bs.binarySearch(numbersCopy, numbersCopy[this.targetIndex].value);\n    bs.binarySearchAnimation();\n  }\n}\n","<mat-toolbar class=\"array-container\">\n  <button type=\"button\" [disabled]=\"arrService.sorting\" class=\"btn btn-primary\" (click)=\"resetArray()\">\n    Generate New Array\n  </button>\n\n  <div class=\"btn-group\" dropdown [insideClick]=\"true\">\n    <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\n      aria-controls=\"dropdown-animated\" [disabled]=\"arrService.sorting\">\n      {{ selectedAlgorithm }} <span class=\"caret\"></span>\n    </button>\n    <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\"\n    >\n          <!-- [disabled]=\"arrService.sorting\"> -->\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.BINARY)\">{{algoEnum.BINARY}}</a>\n      </li>\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.LINEAR)\">{{algoEnum.LINEAR}}</a>\n      </li>\n    </ul>\n  </div>\n\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"startSorting()\"\n    [disabled]=\"arrService.isSorted || arrService.sorting\"> Sort\n  </button>\n\n  <small>Array Size</small>\n  <mat-slider [disabled]=\"arrService.sorting\" thumbLabel tickInterval=\"auto\" min=\"4\" max=\"200\"\n    (input)=\"pitchSize($event)\" value=\"{{ arrService.arrayLength }}\"></mat-slider>\n\n  <small>Iteration Speed </small>\n  <mat-slider [disabled]=\"arrService.sorting\" id=\"speedSlider\" thumbLabel tickInterval=\"auto\"\n    [displayWith]=\"arrService.formatLabel\" min=\"0\" max=\"1000\" (input)=\"pitchSpeed($event)\"\n    value=\"{{ arrService.animationSpeed }}\">\n  </mat-slider>\n</mat-toolbar>\n\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <div class=\"array-container col-12\">\n\n      <div class=\"animation-slide-bar col-sm-6\">\n\n        <table class=\"array-container\">\n          <tr>\n            <td>\n              <div class=\"rectangle\" [ngStyle]=\"{'background-color': 'red'}\"> </div>\n            </td>\n            <td>{{algoEnum.RED_BAR}} </td>\n\n          </tr>\n          <tr>\n          </tr>\n        </table>\n\n        <div class=\"mb-2\">\n          <progressbar type=\"primary\" [striped]=\"true\" [animate]=\"true\" *ngIf=\"arrService.sorting == false\"\n            [value]=\"arrService.arrayLength\"><i>{{arrService.arrayLength}} / 200 </i></progressbar>\n          <progressbar type=\"danger\" [striped]=\"true\" [animate]=\"true\" *ngIf=\"arrService.sorting\"\n            max=\"{{arrService.sortingAnimationsMax}}\" [value]=\"arrService.sortingAnimationsLeft\">\n            <i>{{arrService.sortingAnimationsLeft}} / {{arrService.sortingAnimationsMax}} </i>\n          </progressbar>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"array-body\" *ngFor=\"let num of arrService.numbers\" class=\"array-bar\" [ngStyle]=\"  \n            { 'width.px': num.width,\n              'height.px': num.value,\n              'background-color': num.colour\n            }\">\n\n        <p *ngIf=\"arrService.arrayLength >= 20\" [style.font-size.px]=\"'0'\">.</p>\n\n        <p *ngIf=\"arrService.arrayLength < 20\" [style.color]=\"'white'\">{{ num.value }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { TreeNode } from '../shared/models/TreeNode';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BinaryTreeService {\n\n  animationSpeed = 500;\n  nodeAmount = 10;\n\n  nodes: TreeNode[] = [];\n  nodeValues: number[] = [];\n  root = null;\n\n  constructor() {\n    this.generateNewNodes();\n  }\n\n  initTree() {\n    return this.root = this.sortedArrToBST(0, this.nodeValues.length - 1, 0);\n  }\n\n  sortedArrToBST(start, end, level): TreeNode {\n    // base case\n    if (start > end)\n      return null;\n\n    let mid = Math.floor(start + (end - start) / 2);\n    let newNode = new TreeNode(this.nodeValues[mid]);\n    newNode.level = level;\n\n    newNode.left = this.sortedArrToBST(start, mid - 1, level + 1);\n    newNode.right = this.sortedArrToBST(mid + 1, end, level + 1);\n\n    this.nodes.push(newNode);\n    return newNode;\n  }\n  \n  generateNewNodes(): void {\n    this.nodeValues = [];\n    this.nodes = [];\n    do {\n      const randInt = this.randomInteger(1, 30);\n      if (!this.nodeValues.includes(randInt))\n        this.nodeValues.push(randInt);\n    }\n    while (this.nodeValues.length <= this.nodeAmount)\n    this.nodeValues.sort((a,b) => a - b);\n  }\n\n  randomInteger = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n\n\n}\n","// https://www.typescriptlang.org/docs/handbook/interfaces.html\n\nexport class TreeNode {\n\n    data: number;\n    left: TreeNode;\n    right: TreeNode;\n    xAxis: number;\n    yAxis: number;\n    level: number;\n    colour: string;\n\n    constructor(data: number) {\n        this.data = data;\n        this.left = null;\n        this.right = null;\n        this.xAxis = null;\n        this.yAxis = null;\n        this.level = null;\n        this.colour = 'white';\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ArrayBars } from '../shared/models/ArrayBars';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArraysService {\n\n  public arrayLength: number = 10;\n  public animationSpeed: number = 0;\n  public barWidth: number = 32;\n  numbers: ArrayBars[];\n\n  sortingAnimationsMax: number; // Max animations left\n  sortingAnimationsLeft: number;\n\n  sorting: boolean = false;\n  isSorted: boolean = false;\n  isPaused: boolean = false;\n\n  $primaryBars: string = '#0F5257';\n  $finishedBars: string = '#9C92A3';\n  $selectedIndex: string = 'red';\n  $swappedIndex: string = 'green';\n  $targetIndex: string = 'orange';\n\n  completedAnimation: AnimationValues[] = []; // Iterating the array once last time, to show it is completed\n\n  constructor() { }\n\n  resetArray(): void {\n    this.numbers = [];\n    for (let i = 0; i < this.arrayLength; i++) {\n      const randInt = this.randomInteger(20, 200);\n      this.numbers.push({ value: randInt, colour: this.$primaryBars, width: this.barWidth });\n    }\n    this.sortingAnimationsMax = this.sortingAnimationsLeft = this.numbers.length;\n    this.isSorted = this.sorting = false;\n  }\n\n  resetArrayNoDups(): void {\n    this.numbers = [];\n    let i = 0;\n    while (i++ < this.arrayLength) {\n      const randInt = this.randomInteger(20, 200);\n      const foundDuplicates = this.numbers.filter((row) => row.value === randInt);\n      if (foundDuplicates.length > 0) continue;\n      this.numbers.push({ value: randInt, colour: this.$primaryBars, width: this.barWidth });\n    }\n    this.sortingAnimationsMax = this.sortingAnimationsLeft = this.numbers.length;\n    this.isSorted = this.sorting = false;\n  }\n\n\n  randomInteger(min, max): number {\n    //https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  swap(arr: ArrayBars[], left: number, right: number): void {\n    const temp = arr[left];\n    arr[left] = arr[right];\n    arr[right] = temp;\n  }\n\n  sortArray(): void {\n    this.numbers.sort((a, b) => a.value - b.value);\n  }\n\n  isArraySorted(array: ArrayBars[]): boolean {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i].value > array[i + 1].value) {\n        return false;\n      }\n      this.completedAnimation.push({ index: i });\n    }\n    this.completedAnimation.push({ index: array.length - 1 }); // Append last index\n    this.isSorted = true;\n    return true;\n  }\n\n  animateSortedArray(): void {\n    const timer = setInterval(() => {\n      const action: AnimationValues = this.completedAnimation.shift();\n      if (action) {\n        this.numbers[action.index].colour = this.$finishedBars;\n      } else {\n        clearInterval(timer);\n      }\n    }, 20);\n  }\n\n  setBarWidth(): number {\n    const arrSize = this.arrayLength;\n    if (arrSize < 20) return this.barWidth = 32;\n    if (arrSize >= 20 && arrSize < 30) return this.barWidth = 22;\n    if (arrSize >= 30 && arrSize < 40) return this.barWidth = 18;\n    if (arrSize >= 40 && arrSize < 50) return this.barWidth = 16;\n    if (arrSize >= 50 && arrSize < 60) return this.barWidth = 12;\n    if (arrSize >= 60 && arrSize < 70) return this.barWidth = 10;\n    if (arrSize >= 70 && arrSize < 80) return this.barWidth = 8;\n    if (arrSize >= 80 && arrSize < 90) return this.barWidth = 6;\n    if (arrSize >= 90 && arrSize < 120) return this.barWidth = 5;\n    if (arrSize >= 120 && arrSize < 150) return this.barWidth = 4;\n    if (arrSize >= 150 && arrSize < 180) return this.barWidth = 3;\n    if (arrSize >= 190) return this.barWidth = 2;\n  }\n\n  formatLabel(value: number): string {\n    value /= 1000;\n    if (value.toString().length > 1)\n      return value.toString().substring(0, 4) + 's';\n    return value + 's';\n  }\n\n\n}\n\ninterface AnimationValues {\n  index: number;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'algorithm-visualizer';\n\n  constructor() { }\n\n}\n\n","<div class=\"row\">\n  <div class=\"col-2\">\n    <nav class=\"nav flex-column\">\n      <!-- Href requires a fresh reload, routerlink treats it as an internal route -->\n      <!-- <a class=\"nav-link active\" href=\"algo\">Sorting Algorithms</a> -->\n      <a class=\"nav-link\" routerLink=\"/algorithm\">Sorting Algorithms</a>\n      <a class=\"nav-link\" routerLink=\"/searching\">Searching Algorithms</a>\n      <a class=\"nav-link\" routerLink=\"/binary\">Binary Trees</a>\n\n    </nav>\n  </div>\n  <div class=\"col-10\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { TreeNode } from '../../shared/models/TreeNode';\nimport { BinaryTreeComponent } from '../binary-tree.component';\nimport { BinaryTreeService } from '../../shared/binary-tree.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Colours } from '../../shared/colours.enum';\n\nexport class PreOrder {\n\n  animationNodes = [];\n  visitedNodes: TreeNode[] = [];\n  coloursEnum = Colours;\n  ctx: CanvasRenderingContext2D;\n  canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(public treeService:  BinaryTreeService,\n      ctx: CanvasRenderingContext2D,\n      canvas:  ElementRef<HTMLCanvasElement>, \n      visitedNodes: TreeNode[]) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.visitedNodes = visitedNodes;\n  }\n\n  preOrderTraversal(root: TreeNode) {\n    let stack = [];\n    stack.push(root);\n    while (stack.length > 0) {\n      let pop = stack.pop();\n      if (pop) {\n        this.animationNodes.push(pop);\n        stack.push(pop.right);\n        stack.push(pop.left);\n      }\n    }\n    this.preOrderAnimation();\n  }\n\n  preOrderAnimation() {\n    let timer = setInterval(() => {     \n      let action = this.animationNodes.shift();\n      if (action) {\n          this.treeService.nodes.forEach((node) => {\n            if (this.animationNodes.length <= 0) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else if (node.data == action.data) {\n              node.colour = this.coloursEnum.SELECTED;\n              this.highlightNode(node);\n              this.visitedNodes.push(node);\n            }\n            else if (this.visitedNodes.includes(node)) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else {\n              node.colour = 'white';\n              this.highlightNode(node);\n            }\n          });\n      }\n      else {\n        clearInterval(timer);\n      }\n    }, this.treeService.animationSpeed)\n  }\n\n  highlightNode(node: TreeNode) {\n    // create nodes \n    this.ctx.beginPath();\n    this.ctx.lineWidth = 3;\n    this.ctx.fillStyle = node.colour;\n    // this.ctx.strokeStyle = 'blue';\n    this.ctx.arc(node.xAxis, node.yAxis, 30, 0, 90); \n    this.ctx.stroke();\n    this.ctx.fill();\n\n    // fill node data/style\n    this.ctx.font = \"30px Arial\";\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(node.data.toString(), node.xAxis, node.yAxis + 10);\n  }\n}","import { TreeNode } from '../../shared/models/TreeNode';\nimport { BinaryTreeComponent } from '../binary-tree.component';\nimport { BinaryTreeService } from '../../shared/binary-tree.service';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Colours } from '../../shared/colours.enum';\n\nexport class InOrder {\n\n  animationNodes = [];\n  visitedNodes: TreeNode[] = [];\n  coloursEnum = Colours;\n  ctx: CanvasRenderingContext2D;\n  canvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(public treeService:  BinaryTreeService,\n      ctx: CanvasRenderingContext2D,\n      canvas:  ElementRef<HTMLCanvasElement>, \n      visitedNodes: TreeNode[]) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.visitedNodes = visitedNodes;\n  }\n\n  inOrderTraversal(root: TreeNode) {\n    let stack = [];\n    \n    while (stack.length > 0 || root != null) {\n        while (root != null) {\n          stack.push(root);\n          root = root.left;\n        }\n        let pop = stack.pop();\n        this.animationNodes.push(pop);\n        root = pop.right;\n    }\n    this.inOrderAnimation();\n  }\n\n  inOrderAnimation() {\n    let timer = setInterval(() => {     \n      let action = this.animationNodes.shift();\n      if (action) {\n          this.treeService.nodes.forEach((node) => {\n            if (this.animationNodes.length <= 0) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else if (node.data == action.data) {\n              node.colour = this.coloursEnum.SELECTED;\n              this.highlightNode(node);\n              this.visitedNodes.push(node);\n            }\n            else if (this.visitedNodes.includes(node)) {\n              node.colour = 'green';\n              this.highlightNode(node);\n            }\n            else {\n              node.colour = 'white';\n              this.highlightNode(node);\n            }\n          })\n      }\n      else {\n        clearInterval(timer);\n      }\n    }, this.treeService.animationSpeed)\n    \n\n  }\n\n  highlightNode(node: TreeNode) {\n    // create nodes \n    this.ctx.beginPath();\n    this.ctx.lineWidth = 3;\n    this.ctx.fillStyle = node.colour;\n    // this.ctx.strokeStyle = 'blue';\n    this.ctx.arc(node.xAxis, node.yAxis, 30, 0, 90); \n    this.ctx.stroke();\n    this.ctx.fill();\n\n    // fill node data/style\n    this.ctx.font = \"30px Arial\";\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(node.data.toString(),node.xAxis, node.yAxis + 10);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MergeSort } from './algorithms/merge-sort';\nimport { BubbleSort } from './algorithms/bubble-sort';\nimport { QuickSort } from './algorithms/quick-sort';\nimport { InsertionSort } from './algorithms/insertion-sort';\nimport { ArraysService } from '../shared/arrays.service';\nimport { BsDropdownConfig } from 'ngx-bootstrap/dropdown';\nimport { AlgorithmEnum } from '../shared/algorithm.enum';\nimport { ArrayBars } from '../shared/models/ArrayBars';\n\n@Component({\n  selector: 'app-algorithm-visualizer',\n  templateUrl: './algorithm-visualizer.component.html',\n  styleUrls: ['./algorithm-visualizer.component.scss'],\n  providers: [\n    {\n      provide: BsDropdownConfig,\n      useValue: { isAnimated: true, autoClose: true },\n    },\n  ],\n})\nexport class AlgorithmVisualizerComponent implements OnInit {\n\n  algoEnum = AlgorithmEnum;\n  selectedAlgorithm: AlgorithmEnum = AlgorithmEnum.MERGE;\n\n  constructor(public arrService: ArraysService) { }\n\n  ngOnInit(): void {\n    this.arrService.resetArray();\n  }\n\n  resetArray(): void {\n    this.arrService.resetArray();\n  }\n\n  pitchSize(event: any): void {\n    this.arrService.arrayLength = event.value;\n    this.arrService.setBarWidth();\n    this.arrService.resetArray();\n  }\n\n  pitchSpeed(event: any): void {\n    this.arrService.animationSpeed = event.value;\n  }\n\n  displayInfo(pickedAlgo: AlgorithmEnum): void {\n    this.selectedAlgorithm = pickedAlgo;\n  }\n\n  startSorting(): void {\n    this.arrService.sorting = true;\n    if (this.selectedAlgorithm === AlgorithmEnum.BUBBLE) { this.bubbleSort(); }\n    if (this.selectedAlgorithm === AlgorithmEnum.INSERTION) { this.insertionSort(); }\n    if (this.selectedAlgorithm === AlgorithmEnum.MERGE) { this.mergeSort(); }\n    if (this.selectedAlgorithm === AlgorithmEnum.QUICK) { this.quickSort(); }\n  }\n\n  bubbleSort(): void {\n    const bs = new BubbleSort(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    bs.bubbleSort(numbersCopy);\n    bs.bubbleSortAnimation();\n  }\n\n  insertionSort(): void {\n    const is = new InsertionSort(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    is.insertionSort(numbersCopy);\n    is.insertionSortAnimation();\n  }\n\n  mergeSort(): void {\n    const ms: MergeSort = new MergeSort(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    ms.mergeSort(numbersCopy, 0, numbersCopy.length - 1);\n    ms.mergeSortAnimation();\n  }\n\n  quickSort(): void {\n    const qs: QuickSort = new QuickSort(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    qs.quickSort(numbersCopy);\n    qs.quickSortAnimation();\n  }\n\n}\n","<mat-toolbar class=\"array-container\">\n  <button type=\"button\" [disabled]=\"arrService.sorting\" class=\"btn btn-primary\" (click)=\"resetArray()\">\n    Generate New Array\n  </button>\n  <div class=\"btn-group\" dropdown [insideClick]=\"true\">\n    <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\n      aria-controls=\"dropdown-animated\" [disabled]=\"arrService.sorting\">\n      {{ selectedAlgorithm }} <span class=\"caret\"></span>\n    </button>\n    <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\"\n    >\n            <!-- [disabled]=\"arrService.sorting\"> -->\n\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.BUBBLE)\">{{algoEnum.BUBBLE}}</a>\n      </li>\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.INSERTION)\">{{algoEnum.INSERTION}}</a>\n      </li>\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.MERGE)\">{{algoEnum.MERGE}}</a>\n      </li>\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.QUICK)\">{{algoEnum.QUICK}}</a>\n      </li>\n    </ul>\n  </div>\n\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"startSorting()\"\n    [disabled]=\"arrService.isSorted || arrService.sorting\"> Sort\n  </button>\n\n  <small>Array Size</small>\n  <mat-slider [disabled]=\"arrService.sorting\" thumbLabel tickInterval=\"auto\" min=\"4\" max=\"200\"\n    (input)=\"pitchSize($event)\" value=\"{{ arrService.arrayLength }}\"></mat-slider>\n\n  <small>Iteration Speed </small>\n  <mat-slider [disabled]=\"arrService.sorting\" id=\"speedSlider\" thumbLabel tickInterval=\"auto\"\n    [displayWith]=\"arrService.formatLabel\" min=\"0\" max=\"1000\" (input)=\"pitchSpeed($event)\"\n    value=\"{{ arrService.animationSpeed }}\">\n  </mat-slider>\n</mat-toolbar>\n\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <div class=\"array-container col-12\">\n\n      <div class=\"animation-slide-bar col-sm-6\">\n\n        <table id=\"colorMeaning\" class=\"array-container\">\n          <tr>\n            <td>\n              <div class=\"rectangle\" [ngStyle]=\"{'background-color': 'red'}\"> </div>\n            </td>\n            <td>{{algoEnum.RED_BAR}} </td>\n            <td *ngIf=\"selectedAlgorithm == algoEnum.QUICK\">\n              <div class=\"rectangle\" [ngStyle]=\"{'background-color': 'orange'}\"> </div>\n            </td>\n            <td *ngIf=\"selectedAlgorithm == algoEnum.QUICK\">{{algoEnum.ORANGE_BAR}} </td>\n            <td>\n              <div class=\"rectangle\" [ngStyle]=\"{'background-color': 'green'}\"> </div>\n            </td>\n            <td>{{algoEnum.GREEN_BAR}} </td>\n          </tr>\n          <tr>\n          </tr>\n        </table>\n\n        <div class=\"mb-2\">\n          <progressbar type=\"primary\" [striped]=\"true\" [animate]=\"true\" *ngIf=\"arrService.sorting == false\"\n            [value]=\"arrService.arrayLength\"><i>{{arrService.arrayLength}} / 200 </i></progressbar>\n          <progressbar type=\"danger\" [striped]=\"true\" [animate]=\"true\" *ngIf=\"arrService.sorting\"\n            max=\"{{arrService.sortingAnimationsMax}}\" [value]=\"arrService.sortingAnimationsLeft\">\n            <i>{{arrService.sortingAnimationsLeft}} / {{arrService.sortingAnimationsMax}} </i>\n          </progressbar>\n        </div>\n      </div>\n\n      <hr />\n\n      <div class=\"array-body\" *ngFor=\"let num of arrService.numbers\" class=\"array-bar\" [ngStyle]=\"  \n          { 'width.px': num.width,\n            'height.px': num.value,\n            'background-color': num.colour\n          }\">\n\n        <p *ngIf=\"arrService.arrayLength > 20\" [style.font-size.px]=\"'0'\">.</p>\n\n        <p *ngIf=\"arrService.arrayLength < 20\" [style.color]=\"'white'\">{{ num.value }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AlgorithmVisualizerComponent } from './algorithm-visualizer/algorithm-visualizer.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchingAlgorithmsComponent } from './searching-algorithms/searching-algorithms.component';\nimport { BinaryTreeComponent } from './binary-tree/binary-tree.component';\n\nconst routes: Routes = [\n  { path: 'algorithm', component: AlgorithmVisualizerComponent },\n  { path: 'searching', component: SearchingAlgorithmsComponent },\n  { path: 'binary', component: BinaryTreeComponent },\n\n  { path: '', redirectTo: '/algorithm', pathMatch: 'full' },\n]\n\n@NgModule({\n  declarations: [AppComponent, AlgorithmVisualizerComponent, SearchingAlgorithmsComponent, BinaryTreeComponent],\n  imports: [\n    BrowserModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatSliderModule,\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    RouterModule.forRoot(routes),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","export enum Colours {\n  PRIMARY = '#0F5257',\n  FINISHED = '#9C92A3',\n  SELECTED  = 'red',\n  SWAPPED = 'green',\n  TARGET = 'orange'\n}","import { ArraysService } from 'src/app/shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\n\nexport class MergeSort {\n\n  animations: animationValues[] = []; // Stores array objects => { key, value }\n\n  constructor(private readonly arrService: ArraysService) { }\n\n  mergeSort(array: ArrayBars[], left: number, right: number): void {\n    if (right <= left) {\n      return;\n    }\n\n    let mid = Math.floor((left + right) / 2);\n    this.mergeSort(array, left, mid); // Sort left side of the array, 0 to mid\n    this.mergeSort(array, mid + 1, right); // mid to end\n    this.merge(array, left, mid, right);\n  }\n\n  merge(array, left, mid, right): void {\n    let aux: ArrayBars[] = [...array];\n    let midIndex = mid + 1;\n    let leftIndex = left;\n\n    for (let k = leftIndex; k <= right; k++) {\n      this.animations.push({ index: k, outerIndex: null, value: null });\n\n      if (leftIndex > mid) {\n        if (k !== midIndex) this.animations.push({ index: k, outerIndex: midIndex, value: aux[midIndex] });\n        array[k] = aux[midIndex++];\n\n      } else if (midIndex > right) {\n        if (k !== leftIndex) this.animations.push({ index: k, outerIndex: leftIndex, value: aux[leftIndex] });\n        array[k] = aux[leftIndex++];\n\n      } else if (aux[leftIndex].value > aux[midIndex].value) {\n        if (k !== midIndex) this.animations.push({ index: k, outerIndex: midIndex, value: aux[midIndex] });\n        array[k] = aux[midIndex++];\n\n      } else {\n        if (k !== leftIndex) this.animations.push({ index: k, outerIndex: leftIndex, value: aux[leftIndex] });\n        array[k] = aux[leftIndex++];\n      }\n    }\n  }\n\n  mergeSortAnimation(): void {\n    this.arrService.sortingAnimationsMax = this.animations.length;\n    let timer = setInterval(() => {\n\n      const action: animationValues = this.animations.shift();\n      this.arrService.sortingAnimationsLeft = this.animations.length;\n      if (action) {\n        this.arrService.numbers.map((num) => (num.colour = this.arrService.$primaryBars));\n        if (action.outerIndex == null) {\n          this.arrService.numbers[action.index].colour = this.arrService.$selectedIndex;\n        }\n        else {\n          this.arrService.numbers[action.index].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.outerIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.index] = action.value;\n        }\n      }\n      else {\n        clearInterval(timer);\n        if (this.arrService.isArraySorted(this.arrService.numbers)) {\n          this.arrService.animateSortedArray();\n          this.arrService.sorting = false;\n        }\n      }\n\n    }, this.arrService.animationSpeed);\n  }\n}\n\ninterface animationValues {\n  index: number;\n  outerIndex: number;\n  value: ArrayBars;\n}\n","import { ArrayBars } from '../../shared/models/ArrayBars';\nimport { ArraysService } from '../../shared/arrays.service';\n\nexport class LinearSearch {\n\n    animations: AnimationValues[] = [];\n\n    constructor(private readonly arrService: ArraysService) { }\n\n    linearSearch(arr: ArrayBars[], target: number): number {\n        for (let i = 0; i < arr.length; i++) {\n            this.animations.push({ selectedIndex: i });\n            if (arr[i].value === target) {\n                this.animations.push({ selectedIndex: i });\n                return i;\n            }\n        }\n    }\n\n    linearSearchAnimation(): void {\n        this.arrService.sortingAnimationsMax = this.animations.length;\n        const timer = setInterval(() => {\n            const action = this.animations.shift();\n            this.arrService.sortingAnimationsLeft = this.animations.length;\n            if (action) {\n                this.arrService.numbers[action.selectedIndex].colour = this.arrService.$selectedIndex;\n            }\n            else {\n                clearInterval(timer);\n                if (this.arrService.isArraySorted(this.arrService.numbers)) {\n                    this.arrService.sorting = false;\n                }\n            }\n        }, this.arrService.animationSpeed);\n    }\n}\n\nexport class AnimationValues {\n    selectedIndex: number;\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}