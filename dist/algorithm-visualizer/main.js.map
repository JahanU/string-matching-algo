{"version":3,"sources":["./src/app/shared/algorithm.enum.ts","./src/app/algorithm-visualizer/algorithms/bubble-sort.ts","./src/environments/environment.ts","./src/app/shared/arrays.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/algorithm-visualizer/algorithm-visualizer.component.ts","./src/app/algorithm-visualizer/algorithm-visualizer.component.html","./src/app/app.module.ts","./src/app/algorithm-visualizer/algorithms/NaiveSearch.ts","./src/app/shared/string.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum AlgorithmEnum {\n  SELECTED_ALGORITHM = 'Algorithms',\n  BUBBLE = 'Bubble Sort',\n  NAIVE = 'Naive',\n  KMP = 'Knuth-Morris-Pratt',\n  BM = 'Boyer-Moore',\n  RK = 'Rabin-Karp',\n  TWSM = 'Two-way String Matching'\n  // RED_BAR = 'Selected Index',\n  // ORANGE_BAR = 'Pivot Index',\n  // GREEN_BAR = 'Swapped Values'\n}\n","import { ArraysService } from 'src/app/shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\n\nexport class BubbleSort {\n\n  animations: AnimationValues[] = [];\n\n  constructor(private readonly arrService: ArraysService) { }\n\n  bubbleSort(array: ArrayBars[]): void {\n    for (let i = 0; i < array.length - 1; i++) {\n      for (let j = 0; j < array.length - i - 1; j++) {\n        this.animations.push({ leftIndex: null, rightIndex: null, index: j });\n        if (array[j].value > array[j + 1].value) {\n          this.animations.push({ leftIndex: j, rightIndex: j + 1, index: null });\n          this.arrService.swap(array, j, j + 1);\n        }\n      }\n    }\n  }\n\n  bubbleSortAnimation(): void {\n    this.arrService.sortingAnimationsMax = this.animations.length;\n    const timer = setInterval(() => {\n      const action: AnimationValues = this.animations.shift();\n      this.arrService.sortingAnimationsLeft = this.animations.length;\n      if (action) {\n        this.arrService.numbers.map((num) => (num.colour = this.arrService.$primaryBars));\n        if (action.index != null) {\n          this.arrService.numbers[action.index].colour = this.arrService.$selectedIndex;\n        }\n        else {\n          this.arrService.numbers[action.leftIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.numbers[action.rightIndex].colour = this.arrService.$swappedIndex;\n          this.arrService.swap(this.arrService.numbers, action.leftIndex, action.rightIndex);\n        }\n      }\n      else {\n        clearInterval(timer);\n        if (this.arrService.isArraySorted(this.arrService.numbers)) {\n          this.arrService.animateSortedArray();\n          this.arrService.sorting = false;\n        }\n      }\n    }, this.arrService.animationSpeed);\n  }\n}\n\ninterface AnimationValues {\n  leftIndex: number;\n  rightIndex: number;\n  index: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ArrayBars } from '../shared/models/ArrayBars';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArraysService {\n\n  public arrayLength: number = 10;\n  public animationSpeed: number = 0;\n  public barWidth: number = 32;\n  numbers: ArrayBars[];\n\n  sortingAnimationsMax: number; // Max animations left\n  sortingAnimationsLeft: number;\n\n  sorting: boolean = false;\n  isSorted: boolean = false;\n  isPaused: boolean = false;\n\n  $primaryBars: string = '#0F5257';\n  $finishedBars: string = '#9C92A3';\n  $selectedIndex: string = 'red';\n  $swappedIndex: string = 'green';\n  $targetIndex: string = 'orange';\n\n  completedAnimation: AnimationValues[] = []; // Iterating the array once last time, to show it is completed\n\n  constructor() { }\n\n  resetArray(): void {\n    this.numbers = [];\n    for (let i = 0; i < this.arrayLength; i++) {\n      const randInt = this.randomInteger(20, 200);\n      this.numbers.push({ value: randInt, colour: this.$primaryBars, width: this.barWidth });\n    }\n    this.sortingAnimationsMax = this.sortingAnimationsLeft = this.numbers.length;\n    this.isSorted = this.sorting = false;\n  }\n\n  resetArrayNoDups(): void {\n    this.numbers = [];\n    let i = 0;\n    while (i++ < this.arrayLength) {\n      const randInt = this.randomInteger(20, 200);\n      const foundDuplicates = this.numbers.filter((row) => row.value === randInt);\n      if (foundDuplicates.length > 0) continue;\n      this.numbers.push({ value: randInt, colour: this.$primaryBars, width: this.barWidth });\n    }\n    this.sortingAnimationsMax = this.sortingAnimationsLeft = this.numbers.length;\n    this.isSorted = this.sorting = false;\n  }\n\n\n  randomInteger(min, max): number {\n    //https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  swap(arr: ArrayBars[], left: number, right: number): void {\n    const temp = arr[left];\n    arr[left] = arr[right];\n    arr[right] = temp;\n  }\n\n  sortArray(): void {\n    this.numbers.sort((a, b) => a.value - b.value);\n  }\n\n  isArraySorted(array: ArrayBars[]): boolean {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i].value > array[i + 1].value) {\n        return false;\n      }\n      this.completedAnimation.push({ index: i });\n    }\n    this.completedAnimation.push({ index: array.length - 1 }); // Append last index\n    this.isSorted = true;\n    return true;\n  }\n\n  animateSortedArray(): void {\n    const timer = setInterval(() => {\n      const action: AnimationValues = this.completedAnimation.shift();\n      if (action) {\n        this.numbers[action.index].colour = this.$finishedBars;\n      } else {\n        clearInterval(timer);\n      }\n    }, 20);\n  }\n\n  setBarWidth(): number {\n    const arrSize = this.arrayLength;\n    if (arrSize < 20) return this.barWidth = 32;\n    if (arrSize >= 20 && arrSize < 30) return this.barWidth = 22;\n    if (arrSize >= 30 && arrSize < 40) return this.barWidth = 18;\n    if (arrSize >= 40 && arrSize < 50) return this.barWidth = 16;\n    if (arrSize >= 50 && arrSize < 60) return this.barWidth = 12;\n    if (arrSize >= 60 && arrSize < 70) return this.barWidth = 10;\n    if (arrSize >= 70 && arrSize < 80) return this.barWidth = 8;\n    if (arrSize >= 80 && arrSize < 90) return this.barWidth = 6;\n    if (arrSize >= 90 && arrSize < 120) return this.barWidth = 5;\n    if (arrSize >= 120 && arrSize < 150) return this.barWidth = 4;\n    if (arrSize >= 150 && arrSize < 180) return this.barWidth = 3;\n    if (arrSize >= 190) return this.barWidth = 2;\n  }\n\n  formatLabel(value: number): string {\n    value /= 1000;\n    if (value.toString().length > 1)\n      return value.toString().substring(0, 4) + 's';\n    return value + 's';\n  }\n\n\n}\n\ninterface AnimationValues {\n  index: number;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'algorithm-visualizer';\n\n  constructor() { }\n\n}\n\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { ArraysService } from '../shared/arrays.service';\nimport { StringService } from '../shared/string.service';\n\nimport { BsDropdownConfig } from 'ngx-bootstrap/dropdown';\nimport { AlgorithmEnum } from '../shared/algorithm.enum';\nimport { BubbleSort } from './algorithms/bubble-sort';\nimport { NaiveSearch } from './algorithms/NaiveSearch';\nimport { FormControl, FormGroup, Validators, FormControlName } from '@angular/forms';\n\n@Component({\n  selector: 'app-algorithm-visualizer',\n  templateUrl: './algorithm-visualizer.component.html',\n  styleUrls: ['./algorithm-visualizer.component.scss'],\n  providers: [\n    {\n      provide: BsDropdownConfig,\n      useValue: { isAnimated: true, autoClose: true },\n    },\n  ],\n})\nexport class AlgorithmVisualizerComponent implements OnInit {\n\n  selectedAlgorithm: AlgorithmEnum = AlgorithmEnum.NAIVE;\n    \n  inputs = new FormGroup({\n    needle: new FormControl(this.stringService.needle),\n    stack: new FormControl(this.stringService.stack),\n  });\n  \n\n  constructor(public arrService: ArraysService, public stringService: StringService) { }\n\n  ngOnInit(): void {\n    // this.arrService.resetArray();\n    this.stringService;\n  }\n\n  resetArray(): void {\n    // this.arrService.resetArray();\n  }\n\n  updateStrings() {\n    this.stringService.needle = this.inputs.get('needle').value;\n    this.stringService.stack = this.inputs.get('stack').value;\n    this.stringService.createStringsArrays();\n  }\n\n  pitchSize(event: any): void {\n    this.arrService.arrayLength = event.value;\n    this.arrService.setBarWidth();\n    this.arrService.resetArray();\n  }\n\n  pitchSpeed(event: any): void {\n    this.stringService.animationSpeed = event.value;\n  }\n\n  displayInfo(pickedAlgo: AlgorithmEnum): void {\n    this.selectedAlgorithm = pickedAlgo;\n  }\n\n  startSorting(): void {\n    this.stringService.isSorting = true;\n    if (this.selectedAlgorithm === AlgorithmEnum.BUBBLE) { this.bubbleSort(); }\n    if (this.selectedAlgorithm === AlgorithmEnum.NAIVE) { this.naiveSearch(); }\n  }\n\n  bubbleSort(): void {\n    const bs = new BubbleSort(this.arrService);\n    const numbersCopy = [...this.arrService.numbers];\n    bs.bubbleSort(numbersCopy);\n    bs.bubbleSortAnimation();\n  }\n\n  naiveSearch(): void {\n    const ns = new NaiveSearch(this.stringService);\n    let needleCopy = [...this.stringService.needleArr];\n    let stackCopy = [...this.stringService.stackArr];\n    ns.naiveSearch(stackCopy, needleCopy);\n    ns.naiveSearchAnimation();\n\n  }\n\n}\n","<mat-toolbar class=\"array-container\">\n  <button type=\"button\" [disabled]=\"stringService.isSorting\" class=\"btn btn-primary\" (click)=\"resetArray()\">\n    Generate New String\n  </button>\n  <div class=\"btn-group\" dropdown [insideClick]=\"true\">\n    <button id=\"button-animated\" dropdownToggle type=\"button\" class=\"btn btn-primary dropdown-toggle\"\n      aria-controls=\"dropdown-animated\" [disabled]=\"stringService.isSorting\">\n      {{ selectedAlgorithm }} <span class=\"caret\"></span>\n    </button>\n    <ul id=\"dropdown-animated\" *dropdownMenu class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"button-animated\"\n    >\n            <!-- [disabled]=\"stringService.isSorting\"> -->\n      <li role=\"menuitem\">\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.BUBBLE)\">{{algoEnum.BUBBLE}}</a>\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.NAIVE)\">{{algoEnum.NAIVE}}</a>\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.KMP)\">{{algoEnum.KMP}}</a>\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.BM)\">{{algoEnum.BM}}</a>\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.RK)\">{{algoEnum.RK}}</a>\n        <a class=\"dropdown-item\" (click)=\"displayInfo(algoEnum.TWSM)\">{{algoEnum.TWSM}}</a>\n      </li>\n    </ul>\n  </div>\n\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"startSorting()\"\n    [disabled]=\"stringService.isSorting || stringService.isSorting\"> Sort\n  </button>\n\n  <small>String Size</small>\n  <mat-slider [disabled]=\"stringService.isSorting\" thumbLabel tickInterval=\"auto\" min=\"4\" max=\"200\"\n    (input)=\"pitchSize($event)\" value=\"{{ arrService.arrayLength }}\"></mat-slider>\n\n  <small>Iteration Speed </small>\n  <mat-slider [disabled]=\"stringService.isSorting\" id=\"speedSlider\" thumbLabel tickInterval=\"auto\"\n    [displayWith]=\"arrService.formatLabel\" min=\"0\" max=\"1000\" (input)=\"pitchSpeed($event)\"\n    value=\"{{ stringService.animationSpeed }}\">\n  </mat-slider>\n</mat-toolbar>\n\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <div class=\"array-container col-12\">\n      <form [formGroup]=\"inputs\" (keyup)=\"updateStrings()\" class=\"example-form\">\n\n        <mat-form-field class=\"inputField\">\n          <input formControlName=\"needle\" matInput placeholder=\"Needle\" value=\"ABC\">\n        </mat-form-field>\n\n        <mat-form-field class=\"inputField\">\n          <input formControlName=\"stack\" matInput placeholder=\"Haystack\" value=\"ABCDE\">\n        </mat-form-field>\n      </form>\n\n      <div class=\"array-body array-bar\" *ngFor=\"let letter of stringService.stackArr\"\n      [ngStyle]=\"{ 'background-color': letter.colour }\">\n        {{letter.character}}\n      </div>\n\n      <br>\n\n      <div class=\"array-body array-bar\" *ngFor=\"let letter of stringService.needleArr\"\n      [ngStyle]=\"{ 'background-color': letter.colour }\">\n        {{letter.character}}\n      </div>\n\n    </div>\n  </div>\n</div>\n\n<!-- <div class=\"container-fluid\">\n  <div class=\"row\">\n\n    <div class=\"array-container col-12\">\n      <hr />\n      <div class=\"array-body array-bar\" *ngFor=\"let num of arrService.numbers\" [ngStyle]=\"  \n          { 'width.px': num.width,\n            'height.px': num.value,\n            'background-color': num.colour\n          }\">\n        <p *ngIf=\"arrService.arrayLength > 20\" [style.font-size.px]=\"'0'\">.</p>\n        <p *ngIf=\"arrService.arrayLength < 20\" [style.color]=\"'white'\">{{ num.value }}</p>\n      </div>\n    </div>\n  </div>\n</div> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AlgorithmVisualizerComponent } from './algorithm-visualizer/algorithm-visualizer.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'algorithm', component: AlgorithmVisualizerComponent },\n  { path: '', redirectTo: '/algorithm', pathMatch: 'full' },\n]\n\n@NgModule({\n  declarations: [AppComponent, AlgorithmVisualizerComponent],\n  imports: [\n    BrowserModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    RouterModule.forRoot(routes),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { ArraysService } from 'src/app/shared/arrays.service';\nimport { ArrayBars } from 'src/app/shared/models/ArrayBars';\nimport { StringService } from 'src/app/shared/string.service';\nimport { Letters } from 'src/app/shared/models/Letters';\n\nexport class NaiveSearch {\n\n    animations: AnimationValues[] = [];\n\n    constructor(\n        private readonly stringService: StringService,\n    ) { }\n\n    naiveSearch(stack: Letters[], needle: Letters[]) {\n\n        for (let i = 0; i <= stack.length - needle.length; i++) {\n          let j = 0;\n\n          for (j; j < needle.length; j++) {\n                if (stack[i + j].character != needle[j].character) {\n                  this.animations.push({isMatch: false, stackIndex: i, needleIndex: j});\n                  break;\n                }\n                else {\n                  this.animations.push({isMatch: true, stackIndex: i, needleIndex: j});\n                }\n            }\n            if (j == needle.length) {\n                console.log('match found! At index: ', i);\n            }\n        }\n\n    }\n\n    naiveSearchAnimation(): void {\n      let resetToWhite = false; \n      const timer = setInterval(() => {\n      const action: AnimationValues = this.animations.shift();\n      if (action) {\n        if (resetToWhite) {\n          this.setToWhite();  \n          resetToWhite = false;\n        }\n\n        if (action.isMatch) {\n          this.stringService.needleArr[action.needleIndex].colour = '#b2ff59';\n          this.stringService.stackArr[action.stackIndex + action.needleIndex].colour = '#b2ff59';\n          if (action.needleIndex == this.stringService.needleArr.length - 1) {\n            resetToWhite = true;\n          }\n        }\n        else { \n          this.stringService.needleArr[action.needleIndex].colour = 'red';\n          this.stringService.stackArr[action.stackIndex + action.needleIndex].colour = 'red';\n          resetToWhite = true;\n        }\n      }\n      else {\n        clearInterval(timer);\n        this.stringService.isSorting = false;    \n        this.setToWhite();  \n      }\n    }, this.stringService.animationSpeed);\n  }\n\n  setToWhite() {\n    this.stringService.stackArr.map((chr) => (chr.colour = 'white'));\n    this.stringService.needleArr.map((chr) => (chr.colour = 'white'));    \n  }\n\n}\n\ninterface AnimationValues {\n  isMatch: boolean;\n  stackIndex: number;\n  needleIndex: number;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Letters } from './models/Letters';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StringService {\n\n  stack: string;\n  needle: string;\n  stackArr: Letters[];\n  needleArr: Letters[];\n  isSorting: boolean = false;\n  animationSpeed: number = 1000;\n\n  constructor() {\n    this.reset();\n    this.createStringsArrays();\n  }\n\n  reset() {\n    [this.stack, this.needle, this.stackArr, this.needleArr] = ['ABCDE','ABC',[],[]];\n  }\n\n  createStringsArrays() {\n    let splitStack = this.stack.split(''); // Will always be unchanged!\n    let splitNeedle = this.needle.split('');\n\n    this.stackArr = [];\n    this.needleArr = [];\n\n    for (let i = 0; i < splitStack.length; i++) {\n      this.stackArr.push({character: splitStack[i], colour: 'white', index: i});\n    }\n\n    for (let i = 0; i < splitNeedle.length; i++) {\n      this.needleArr.push({character: splitNeedle[i], colour: 'white', index: i});\n    }\n  }\n}\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}